/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/
define("vs/basic-languages/rockstar/rockstar",[],()=>{
var moduleExports = (() => {
  var __defProp = Object.defineProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
  var __export = (target, all) => {
    __markAsModule(target);
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };

  // src/basic-languages/rockstar/rockstar.ts
  var rockstar_exports = {};
  __export(rockstar_exports, {
    conf: () => conf,
    language: () => language
  });
  var conf = {
    comments: {
      lineComment: "*"
    },
    brackets: [
      ["[", "]"],
      ["(", ")"]
    ]
  };
  
  
  // ROCKSTAR LANGUAGE DEFINITION BEGIN
  
  var language = {
  // Set defaultToken to invalid to see what you do not tokenize yet
  // defaultToken: 'invalid',

  ignoreCase: true,
  
  operators: [
	 '*', '+', '-', '/', '=', 
    'aint', 'alike', 'all', 'and', 'are', 'arent', 'around', 'as', 'at', 
    'between', 'big', 'bigger', 'by', 
    'contain', 'containing', 'contains', 'count',	
    'for', 'from', 
    'great', 'greater', 
    'height', 'high', 'higher',
    'in', 'into', 'is', 'isnt', 
    'keys', 
    'last', 'length', 'less', 'little', 'low', 'lower', 
    'minus',
    'near', 'nor', 'not', 
    'of', 'on', 'or', 'over', 
    'plus', 
    'round', 
    'small', 'smaller', 'sorted', 'strong', 'stronger', 
    'than', 'till', 'times', 'to', 
    'values', 
    'was', 'wasnt', 'weak', 'weaker', 'were', 'werent', 'with', 'within', 'without', 
  ],
  
  keywords: [
	'album', 'back', 'be', 'break', 'build', 'burn', 'cast', 'continue',  'cut', 
	'definitely', 'down', 'else', 'give', 'hold', 'holds', 'if', 'join', 'knock', 'listen', 'let', 'maybe', 'means', 
	'off', 'otherwise', 'play', 'pop', 'pull', 'push', 'put', 'rock', 'roll', 
	'said', 'say', 'says', 'scream', 'send', 'shatter', 'shout', 'split', 'takes', 'taking', 'thinks', 'turn', 
	'unite', 'until', 'up', 'wants', 'when', 'while', 'whisper', 
  ],
  
  pronouns: [
	'he', 'her', 'him', 'hir', 'it', 'she', 'them', 'they', 've', 'ver', 'xe', 'xem', 'ze', 'zie', 'zir' 
  ],
  
  constants: [
	'empty', 'gone', 'lies', 'mysterious', 'no', 'nobody', 'nothing', 'nowhere', 'null', 'ok', 'right', 'silence', 'silent', 'true', 'void', 'wrong', 'yes', 
  ],
  
  obj_refs: [
	'himself', 'herself', 'itself', 'mama',  'mother', 'myself', 'ourselves', 'papa', 'parent', 'self', 'themselves', 'yourself', 'yourselves', 
  ],
  
  var_prefixes: [
	'a', 'an', 'my', 'our', 'the', 'your', 
  ],
  
  poetic_starter: [
	'like', 
  ],
		
  // The main tokenizer for Rockstar language
  tokenizer: {
    root: [

      // whitespace
      { include: '@whitespace' },

      [ /[a-zA-Z]+/, { cases: {
        '@keywords': 'keyword',
        '@operators': 'operators',
        '@pronouns': 'identifier',
        '@constants': 'constant',
        '@obj_refs': 'identifier',
        '@var_prefixes': 'identifier',
        '@poetic_starter': 'keyword',
        }}
      ], 

      [ /".*"/, { token: 'string' }
      ], 
    ],

    comment: [
      [/[^\)]+/, 'comment' ],
      [/\(/,      'comment', '@push' ],    // nested comment
      [/\)/,    'comment', '@pop'  ]
    ],

    whitespace: [
      [/[ \t\r\n]+/, 'white'],
      [/\(/,       'comment', '@comment' ],
      [/#.*$/,     'comment'],
    ],
  }
  }; 
  // ROCKSTAR LANGUAGE DEFINITION END



  return rockstar_exports;
})();
return moduleExports;
});



	  
	  
